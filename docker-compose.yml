services:
    postgres:
        image: postgres:15
        container_name: postgres
        restart: always
        env_file:
            - .env
        ports:
            - '5432:5432'
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - homelab_net

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        restart: always
        env_file:
            - .env
        ports:
            - '5672:5672'
            - '15672:15672'
        healthcheck:
            test: ['CMD', 'rabbitmq-diagnostics', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - homelab_net

    mosquitto:
        image: eclipse-mosquitto:2
        container_name: mosquitto
        restart: always
        ports:
            - '1883:1883'
            - '9001:9001'
        healthcheck:
            test: ['CMD-SHELL', 'mosquitto_sub -h localhost -t healthcheck -C 1 -E || exit 1']
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - mosquitto_data:/mosquitto/data
            - ./mosquitto/config:/mosquitto/config
        networks:
            - homelab_net

    cat_ingestor:
        build: ../homelab-gatos-iot/services/cat_ingestor
        container_name: cat_ingestor
        depends_on:
            - mosquitto
            - postgres
        env_file:
            - .env
        networks:
            - homelab_net
        volumes:
            - ./cat_ingestor_logs:/app/logs

    backend:
        build:
            context: ./backend
            args:
                APP_ENV: ${APP_ENV}
                HOST_UID: ${HOST_UID}
                HOST_GID: ${HOST_GID}
        container_name: backend
        depends_on:
            - postgres
            - rabbitmq
        env_file:
            - .env
        environment:
            APP_ENV: ${APP_ENV}
            DB_CONNECTION: ${DB_CONNECTION}
            DB_HOST: ${POSTGRES_HOST}
            DB_PORT: ${POSTGRES_PORT}
            DB_DATABASE: ${POSTGRES_DB}
            DB_USERNAME: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - '8000:8000'
        networks:
            - homelab_net
        volumes:
            - ./backend:/var/www/html

    frontend:
        build:
            context: ./frontend
            args:
                APP_ENV: ${APP_ENV}
                HOST_UID: ${HOST_UID}
                HOST_GID: ${HOST_GID}
        container_name: frontend
        depends_on:
            - backend
        env_file:
            - .env
        environment:
            APP_ENV: ${APP_ENV}
            HOST: '0.0.0.0'
            PORT: '8080'
        ports:
            - '8080:8080'
        networks:
            - homelab_net
        volumes:
            - ./frontend:/app

volumes:
    pgdata:
    mosquitto_data:
    mosquitto_config:

networks:
    homelab_net:
        driver: bridge
